/// Utility lists holding constants as presented in the EURING Exchange
/// Code 2020.
///
/// Current access: https://euring.org/files/documents/E2020ExchangeCodeV201.pdf

/// EURING Code accuracy of coordinates values.
const List<String> accuracyOfCoordinates = <String>[
  '',
  '0',
  '1',
  '2',
  '3',
  '4',
  '5',
  '6',
  '7',
  '8',
  '9',
  'A',
  'B',
  'C',
  'D',
  'E',
  'F',
  'G',
  'H',
  'I',
  'J',
  'K',
  'L',
  'M',
  'N',
  'O',
  'P',
  'Q',
  'R',
  'S',
  'T',
  'U',
  'V',
  'W',
  'X',
  'Y',
  'Z',
];

/// EURING Code accuracy of date values.
const List<String> accuracyOfDate = <String>[
  '',
  '0',
  '1',
  '2',
  '3',
  '4',
  '5',
  '6',
  '7',
  '8',
  '9',
];

/// EURING code age values.
const List<String> age = <String>[
  '',
  '0',
  '1',
  '2',
  '3',
  '4',
  '5',
  '6',
  '7',
  '8',
  '9',
  'A',
  'B',
  'C',
  'D',
  'E',
  'F',
  'G',
  'H',
];

/// EURING code carpal covert values.
const List<String> carpalCovert = <String>[
  '',
  '0',
  '1',
];

/// EURING code catching lures values.
const List<String> catchingLures = <String>[
  '',
  '-',
  'U',
  'A',
  'B',
  'C',
  'D',
  'E',
  'F',
  'G',
  'H',
  'M',
  'N',
];

/// EURING code catching method values.
const List<String> catchingMethod = <String>[
  '',
  '-',
  'A',
  'B',
  'C',
  'D',
  'F',
  'G',
  'H',
  'L',
  'M',
  'N',
  'O',
  'P',
  'R',
  'S',
  'T',
  'U',
  'V',
  'W',
  'Z',
];

/// EURING code circumstances values.
const List<String> circumstances = <String>[
  // TODO: Compplete the list!
  '',
  '0',
  '1',
  '2',
  '3',
  '4',
  '5',
  '6',
  '7',
  '8',
  '9',
  '99',
];

/// EURING code circumstances presumed values.
const List<String> circumstancesPresumed = <String>[
  '',
  '0',
  '1',
];

/// EURING code condition values.
const List<String> condition = <String>[
  '',
  '0',
  '1',
  '2',
  '3',
  '4',
  '5',
  '6',
  '7',
  '8',
  '9',
];

/// EURING code countries.
const List<String> countries = <String>[
  // TODO: Complete the list!
  '',
  'ADEN',
  'AFGANISTAN',
  'ALBANIA',
  'ALGERIA',
  'ANDORRA',
  'ANGOLA',
  'ANTARCTICA',
  'ARCTIC OCEAN',
  'ARGENTINA',
  'ARMENIA',
  'AT SEA',
  'AUSTRALIA',
  'AUSTRIA',
  'AZERBAIJAN',
  'BAHAMAS',
  'BAHRAIN & QATAR',
  'BALTIC SEA ISLANDS',
  'BANGLADESH',
  'BAY OF BISCAY ISLANDS',
  'BEAR ISLAND',
  'BELARUS',
  'BELGIUM',
  'BELIZE',
  'BENIN',
  'BERMUDA',
  'BHUTAN',
  'BIOCO',
  'BLACK AND CASPIAN SEA ISLANDS',
  'BOLIVIA',
  'BORNEO',
  'BORNEO ISLAND',
  'BOSNIA AND HERZEGOVINA',
  'BOTSWANA',
  'BRAZIL',
  'BRITISH INDIAN OCEAN TERRITORIES',
  'BULGARIA',
  'BURKINA FASO',
  'BURUNDI',
  'CAMBODIA',
  'CAMEROON',
  'CANADA',
  '...',
  'SLOVAKIA',
  '...',
  'UNITED KINGDOM',
  '...'
      'YEMEN',
  'ZAMBIA',
  'ZANZIBAR & PEMBA'
      'ZIMBABWE',
];

/// EURING Code metal ring information values.
const List<String> metalRingInfo = <String>[
  '',
  '0',
  '1',
  '2',
  '3',
  '4',
  '5',
  '6',
  '7',
];

/// EURING code moult values.
const List<String> moult = <String>[
  '',
  'B',
  'J',
  'M',
  'P',
  'X',
  'U',
];

/// EURING Code values of place code.
const Map<String, List<String>> placeCodes = {
  // TODO: Complete the list!
  'SLOVAKIA': [
    '',
    'SKSI',
    'SK--',
    'SKSV',
    'SKSO',
    'SKSN',
    'SKSL',
    'SKSP',
    'SKSK',
    'SKTO',
    'SKTV',
    'SKTN',
    'SKTT',
    'SKTR',
    'SKTS',
    'SKVK',
    'SKVT',
    'SKZC',
    'SKZH',
    'SKZA',
    'SKZM',
    'SKZV',
    'SKBN',
    'SKBB',
    'SKBS',
    'SKBJ',
    'SKBA',
    'SKBR',
    'SKBY',
    'SKCA',
    'SKDT',
    'SKDK',
    'SKDS',
    'SKGA',
    'SKGL',
    'SKHC',
    'SKHE',
    'SKIL',
    'SKKK',
    'SKKN',
    'SKKE',
    'SKKS',
    'SKKA',
    'SKKM',
    'SKLV',
    'SKLE',
    'SKLM',
    'SKLC',
    'SKMA',
    'SKMT',
    'SKML',
    'SKMI',
    'SKMY',
    'SKNO',
    'SKNR',
    'SKNM',
    'SKNZ',
    'SKPE',
    'SKPK',
    'SKPI',
    'SKPT',
    'SKPP',
    'SKPB',
    'SKPO',
    'SKPD',
    'SKPU',
    'SKRA',
    'SKRS',
    'SKRV',
    'SKRK',
    'SKSB',
    'SKSA',
    'SKSC',
    'SKSE',
  ],
  'UNITED KINGDOM': [
    '',
    'GB--',
    'GBMB',
    'GBMK',
    'GBML',
    'GBMN',
    'GBMO',
    'GBMT',
    'GBMW',
    'GBNA',
    'GBNE',
    'GBNG',
    'GBNO',
    'GBNP',
    'GBNR',
    'GBNS',
    'GBPB',
    'GBPE',
    'GBPH',
    'GBPL',
    'GBPM',
    'GBPP',
    'GBL',
  ],
};

/// EURING code plumage code values.
const List<String> plumageCode = <String>[
  '',
  'U',
  'A',
  'B',
  'D',
  'E',
  'F',
  'I',
  'J',
  'W',
  '1',
  '2',
  '3',
  '4',
  '5',
  '6',
  '7',
];

/// EURING Code primary identification method values.
const List<String> primaryIdMethod = <String>[
  '',
  'A0',
  'B0',
  'C0',
  'D0',
  'E0',
  'F0',
  'G0',
  'H0',
  'K0',
  'L0',
  'R0',
  'T0',
];

/// EURING code ringing scheme values.
const List<String> ringingSchemes = <String>[
  '',
  'ABT',
  'BLB',
  'BGS',
  'CIJ',
  'HRZ',
  'CYC',
  'CZP',
  'DKC',
  'ETM',
  'SFH',
  'FRP',
  'DEW',
  'DEH',
  'DER',
  'HGB',
  'ISR',
  'IAB',
  'LIK',
  'MKS',
  'MLV',
  'NLA',
  'PLG',
  'POL',
  'RSB',
  'SKB',
  'ESI',
  'ESA',
  'SVS',
  'HES',
  'TUA',
  'GBT',
  'UKK',
  'ILT',
  'USA',
];

/// EURING code sexing method values.
const List<String> sexingMethod = <String>[
  '',
  'A',
  'B',
  'C',
  'D',
  'E',
  'L',
  'P',
  'S',
  'T',
  'U',
];

/// Species encoding values.
///
/// This is a six letter version, requires translating to EURING code five
/// digit values.
const List<String> species = <String>[
  // TODO: Complete the list!
  'ACC',
  'ACC.GEN',
  'ACC.NIS',
  'ACR.OLA',
  'ACR.RIS',
  'ACT.HYP',
  'ALO.EGY',
  'ANA.ACU',
  'ANA.CLY',
  'ANA.CRE',
  'ANA.PEN',
  'ANA.PLA',
  'ANA.QUE',
  'ANA.STR',
  'ANS',
  'ANS.ALB',
  'ANS.ANS',
  'ANS.BRA',
  'ANS.ERY',
  'ANS.FAB',
  'ANT',
  'ANT.CAM',
  'ANT.CER',
  'ANT.PRA',
  'ANT.SPI',
  'ANT.TRI',
  'APU.APU',
  'APU.MEL',
  'ARE.INT',
  'ARD.RAL',
  'ATH.NOC',
  'AYT.COL',
  'AYT.FER',
  'AYT.FUL',
  'AYT.MAR',
  'AYT.NYR',

  'BOM.GAR',
  'BON.BON',
  'BOT.STE',
  'BRA',
  'BRA.BER',
  'BRA.CAN',
  'BRA.LEU',
  'BRA.RUF',
  'BUB.IBI',
  'BUC.CLA',
  'BUR.OED',
  'BUT',

  'CAL.ENS',
  'CAL.LBA',
  'CAL.INA',
  'CAL.TUS',
  'CAL.LIS',
  'CAL.UTA',
  'CAL.LLA',
  'CAP.EUR',
  'CAP.LIS',
  'CAR.ERY',
  'CAR.INA',
  'CAR.LIS',
  'CAR.MEA',
  'CAR.VIR',
  'CER.FAM',
  'CHA.ALE',
  'CHA.DUB',
  'CHA.HIA',
  'CHA.MOR',
  'CHE.GRE',
  'CHE.URA',
  'CHL.HYB',
  'CHL.NIG',
  'CHL.RUS',
  'CHL.UND',
  'CIC.CIC',
  'CIC.NIG',
  'CIR',
  'CIR.AER',
  'CIR.CYA',
  'CIR.GAL',
  'CIR.MAC',
  'CIR.PYG',
  'CLA.HYE',
  'CLA.GLA',
  'COC.COC',
  'COL',
  'COL.LIV',
  'COL.OEN',
  'COL.PAL',
  'COR',
  'COR.FRU',
  'COR.GAR',
  'COR.MON',
  'COR.NIX',
  'COR.RAX',
  'COR.ONE',
  'CRE.CRE',
  'CUC.CAN',
  'CYA.NUS',
  'CYA.ANA',
  'CYG.COL',
  'CYG.CYG',
  'CYG.OLO',

  'DEL.URB',
  'DEN.LEU',
  'DEN.MAJ',
  'DEN.MED',
  'DEN.MIN',
  'DEN.SYR',

  'EGR.GAR',
  'EGR.ALB',
  'EMB.LLA',
  'EMB.ICA',
  'ERI.RUB',

  'FAL',
  'FEE',
  'FIC.AXH',
  'FIC.INA',
  'FIC.RVA',
  'FRI',
  'FUL.ATR',

  'GLA.PAS',

  'HAE.OST',
  'HEE',
  'HIR.DAU',
  'HIR.RUS',
  'HIS.HIS',

  'IXO.MIN',

  'JYN.TOR',

  'LAN.NOR',
  'LAR.ARG',
  'LAR.CAC',
  'LAR.CAN',
  'LAR.DEL',
  'LAR.FUS',
  'LAR.HYP',
  'LAR.MAR',
  'LAR.MEL',
  'LAR.RID',
  'LAR.UTU',
  'LIM.FAL',
  'LIM.LAP',
  'LIM.LIM',
  'LOC.DES',
  'LOX',
  'LOX.CUR',
  'LOX.LEU',
  'LUS.NIA',

  'MIL.ANS',
  'MIL.VUS',
  'MOT',

  'NET.RUF',
  'NUM.ARQ',
  'NUM.PHA',
  'NUM.TEN',
  'NYC.NYC',
  'NYC.SCA',

  'OEN.YGA',
  'OEN.URA',
  'OTI.TAR',

  'PAN.BIA',
  'PAN.HEL',
  'PAR',
  'PAR.UMO',
  'PAS',
  'PAS.SMO',
  'PER.PER',
  'PHA.ARI',
  'PHA.CAR',
  'PHA.COL',
  'PHA.CUS',
  'PHA.FUL',
  'PHA.PYG',
  'PHI.PUG',
  'PHY.BIT',
  'PHY.BON',
  'PHY.DES',
  'PHY.INO',
  'PHY.LUS',
  'PHY.PRO',
  'PHY.SIB',
  'PIC.TRI',
  'PLE.FAL',
  'PLU.APR',
  'PLU.SQU',
  'POD.ENA',
  'POR.RIO',
  'POR.ANA',
  'POR.PAR',
  'POR.PUS',
  'PSS',
  'PYR.GRA',
  'PYR.RAX',
  'PYR.ULA',

  'RAL.AQU',
  'REG.IGN',
  'REG.REG',
  'REM.PEN',
  'RIP.RIP',
  'RIS.TRI',

  'SAX.TRA',
  'SAX.OLA',
  'SER.SER',
  'SIT.EUR',
  'SOM.MOL',
  'STE.CAS',
  'STE.CUS',
  'STE.AEA',
  'STR',
  'STR.DEC',
  'STR.TUR',
  'SUR.ULU',
  'SYL.ATA',
  'SYL.ALA',
  'SYL.RAX',
  'SYL.UNI',
  'SYR.PAR',

  'TAD.FER',
  'TAD.TAD',
  'TET.RIX',
  'TET.RAX',
  'TET.URO',
  'TRI.ERY',
  'TRI.NEB',
  'TRI.OCH',
  'TRI.OLA',
  'TRI.PES',
  'TRI.STA',
  'TRI.TOT',
  'TUR',
  'TUR.ILI',
  'TUR.MER',
  'TUR.PHI',
  'TUR.PIL',
  'TUR.TOR',
  'TUR.VIS',

  'UPU.EPO',

  'VAN.VAN',

  'XEN.CIN',
];

/// EURING code state of wing point values.
const List<String> stateOfWingPoint = <String>[
  '',
  'U',
  'A',
  'B',
  'G',
  'M',
  'V',
];

/// EURING code status values.
const List<String> status = <String>[
  '',
  '-',
  'U',
  'N',
  'R',
  'K',
  'M',
  'T',
  'L',
  'W',
  'P',
  'S',
];
